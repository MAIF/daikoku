name: Release Daikoku

on:
  push:
    tags:
      - v**

jobs:
  release:
    name: release Daikoku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # setup java to use sbt (?)
      - name: Set up JDK 11
        uses: actions/setup-java@v11
        with:
          java-version: 11
      # install node 14 et yarn
      - name: pre-release
        run: |
          sudo apt-get install wget curl
          wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash 
          export NVM_DIR="/home/github/.nvm" 
          sh $NVM_DIR/nvm.sh
          nvm install 14
          nvm use 14
          curl -o- -L https://yarnpkg.com/install.sh | bash
      # clean, build doc and build DK
      - name: Build DK
        run: sh ./scripts/build.sh github
      # generate changlog to add on release body
      - name: Create changelogs
        id: changelogs
        uses: heineiuo/create-changelogs@master
      # create github release
      - name: Create a Release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{ steps.changelogs.outputs.changelogs }}
          draft: false
      # attach daikou.ajr, zip & doc to release
      - name: Upload a Release Asset - daikoku.jar
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./daikoku/target/scala-2.13/daikoku.jar
          asset_name: daikoku-${{ github.ref }}.jar
          asset_content_type: application/octet-stream
      - name: Upload a Release Asset - daikoku.zip
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./daikoku/target/universal/daikoku.zip
          asset_name: daikoku-${{ github.ref }}.zip
          asset_content_type: application/octet-stream
      - name: Zip manual
        run: zip -r $LOCATION/daikoku-manual.zip $LOCATION/docs/manual -x '*.DS_Store'
      - name: Upload a Release Asset - manual
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./daikoku-manual.zip
          asset_name: daikoku-manual-${{ github.ref }}.zip
          asset_content_type: application/octet-stream
      # build docker image
      - name: Build docker image
        run: sbt 'docker:publishLocal'
      # publish docker image (latest & tagged)
      - name: publish docker image
        uses: manusa/actions-publish-docker@v1.1.2
        with:
          name: maif/daikoku
          tag: ${{ github.ref }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: publish docker image
        uses: manusa/actions-publish-docker@v1.1.2
        with:
          name: maif/daikoku
          tag: ${{ github.ref }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # close milestone ==> launch release note action.
      - name: Close milestone 
        uses: adlerhsieh/prepare-release@v0.1.2
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}