"use strict";(self.webpackChunkdaikoku_documentation=self.webpackChunkdaikoku_documentation||[]).push([[117],{869:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>u,contentTitle:()=>t,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=o(5893),a=o(1151);const r={},t="Run Daikoku",s={id:"getstarted/firstrun/run",title:"Run Daikoku",description:"Now you are ready to run Daikoku. You can run the following command with some tweaks depending on the way you want to configure Daikoku. If you want to pass a custom configuration file, use the -Dconfig.file=/path/to/file.conf option in the following commands.",source:"@site/docs/01-getstarted/05-firstrun/run.md",sourceDirName:"01-getstarted/05-firstrun",slug:"/getstarted/firstrun/run",permalink:"/docs/getstarted/firstrun/run",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Import initial state",permalink:"/docs/getstarted/firstrun/initialstate"},next:{title:"Setup Daikoku",permalink:"/docs/getstarted/setup/"}},u={},d=[{value:"From .zip file",id:"from-zip-file",level:2},{value:"From .jar file",id:"from-jar-file",level:2},{value:"From docker",id:"from-docker",level:2},{value:"Run examples",id:"run-examples",level:2}];function l(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"run-daikoku",children:"Run Daikoku"}),"\n",(0,i.jsxs)(e.p,{children:["Now you are ready to run Daikoku. You can run the following command with some tweaks depending on the way you want to configure Daikoku. If you want to pass a custom configuration file, use the ",(0,i.jsx)(e.code,{children:"-Dconfig.file=/path/to/file.conf"})," option in the following commands."]}),"\n",(0,i.jsx)(e.h2,{id:"from-zip-file",children:"From .zip file"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:"unzip daikoku-dist.zip\ncd daikoku-vx.x.x\n./bin/daikoku\n"})}),"\n",(0,i.jsx)(e.h2,{id:"from-jar-file",children:"From .jar file"}),"\n",(0,i.jsx)(e.p,{children:"For Java 11"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:"java -jar daikoku.jar\n"})}),"\n",(0,i.jsx)(e.h2,{id:"from-docker",children:"From docker"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:'docker run -p "8080:8080" maif/daikoku\n'})}),"\n",(0,i.jsx)(e.p,{children:"You can also pass useful args like :"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'docker run -p "8080:8080" daikoku -Dconfig.file=/usr/app/daikoku/conf/daikoku.conf -Dlogger.file=/usr/app/daikoku/conf/daikoku.xml\n'})}),"\n",(0,i.jsxs)(e.p,{children:["If you want to provide your own config file, you can read ",(0,i.jsx)(e.a,{href:"/docs/getstarted/firstrun/configfile",children:"the documentation about config files"}),"."]}),"\n",(0,i.jsxs)(e.p,{children:["You can also provide some ENV variable using the ",(0,i.jsx)(e.code,{children:"--env"})," flag to customize your Daikoku instance."]}),"\n",(0,i.jsxs)(e.p,{children:["The list of possible env variables is available ",(0,i.jsx)(e.a,{href:"/docs/getstarted/firstrun/env",children:"here"}),"."]}),"\n",(0,i.jsx)(e.p,{children:"You can use a volume to provide configuration like :"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:'docker run -p "8080:8080" -v "$(pwd):/usr/app/daikoku/conf" maif/daikoku\n'})}),"\n",(0,i.jsx)(e.p,{children:"You can also use a volume if you choose to use exports files :"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:'docker run -p "8080:8080" -v "$(pwd):/usr/app/daikoku/imports" maif/daikoku -Ddaikoku.init.data.from=/usr/app/daikoku/imports/export.ndjson\n'})}),"\n",(0,i.jsx)(e.h2,{id:"run-examples",children:"Run examples"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:"$ java \\\n  -Xms2G \\\n  -Xmx8G \\\n  -Dhttp.port=8080 \\\n  -Ddaikoku.init.data.from=/home/user/daikoku.ndjson \\\n  -Dconfig.file=/home/user/daikoku.conf \\\n  -jar ./daikoku.jar\n\n[info] play.api.Play - Application started (Prod)\n[warn] daikokuEnv - Main dataStore seems to be empty, importing from /home/user/daikoku.conf ...\n[warn] daikokuEnv - Importing from: /home/user/daikoku.ndjson\n[info] p.c.s.AkkaHttpServer - Listening for HTTP on /0:0:0:0:0:0:0:0:8080\n"})}),"\n",(0,i.jsx)(e.p,{children:"If you choose to start Daikoku without importing existing data, Daikoku will create a new admin user and print the login details in the log."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sh",children:"$ java \\\n  -Xms2G \\\n  -Xmx8G \\\n  -Dhttp.port=8080 \\\n  -jar daikoku.jar\n\n[info] play.api.Play - Application started (Prod)\n[warn] DaikokuEnv - Main dataStore seems to be empty, generating initial data ...\n[info] p.c.s.AkkaHttpServer - Listening for HTTP on /0.0.0.0:8080\n[warn] DaikokuEnv -\n[warn] DaikokuEnv - You can log in with admin@daikoku.io / wr4pHmVRArCGhHoteMfwqV6UuvQh6J2z\n[warn] DaikokuEnv -\n[warn] DaikokuEnv - Please avoid using the default tenant for anything else than configuring Daikoku\n[warn] DaikokuEnv -\n\n"})})]})}function c(n={}){const{wrapper:e}={...(0,a.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},1151:(n,e,o)=>{o.d(e,{Z:()=>s,a:()=>t});var i=o(7294);const a={},r=i.createContext(a);function t(n){const e=i.useContext(r);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:t(n.components),i.createElement(r.Provider,{value:e},n.children)}}}]);