"use strict";(self.webpackChunkdaikoku_documentation=self.webpackChunkdaikoku_documentation||[]).push([[3733],{5532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var o=n(5893),s=n(1151);const i={},a="Initialize Tenant from Otoroshi instances",r={id:"usages/tenantusage/1.5-initialize",title:"Initialize Tenant from Otoroshi instances",description:"You perhaps have a previous instance of Otoroshi, whiche contains services and lot of apikeys. This page have been created to easily import service group as API and apikeys as subscriptions in a tenant of your Daikoku instance.",source:"@site/docs/02-usages/08-tenantusage/1.5-initialize.md",sourceDirName:"02-usages/08-tenantusage",slug:"/usages/tenantusage/1.5-initialize",permalink:"/daikoku/docs/usages/tenantusage/1.5-initialize",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Using Content Management System",permalink:"/daikoku/docs/usages/tenantusage/cms"},next:{title:"Display modes",permalink:"/daikoku/docs/usages/tenantusage/5.5-display"}},c={},l=[{value:"Select Otoroshi instance",id:"select-otoroshi-instance",level:2},{value:"Select the step",id:"select-the-step",level:2},{value:"Select Service group to import",id:"select-service-group-to-import",level:2},{value:"Services - Recap and creation",id:"services---recap-and-creation",level:2},{value:"Select API keys to import",id:"select-api-keys-to-import",level:2},{value:"Subscriptions - Recap and creation",id:"subscriptions---recap-and-creation",level:2},{value:"Done",id:"done",level:2}];function h(e){const t={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"initialize-tenant-from-otoroshi-instances",children:"Initialize Tenant from Otoroshi instances"}),"\n",(0,o.jsx)(t.p,{children:"You perhaps have a previous instance of Otoroshi, whiche contains services and lot of apikeys. This page have been created to easily import service group as API and apikeys as subscriptions in a tenant of your Daikoku instance."}),"\n",(0,o.jsxs)(t.p,{children:["Go to ",(0,o.jsx)(t.code,{children:"settings/Organizations settings"})," and click ",(0,o.jsx)(t.code,{children:"Initialization"})," on the left menu."]}),"\n",(0,o.jsx)(t.p,{children:"Now, it's easy as just follow steps."}),"\n",(0,o.jsx)(t.h2,{id:"select-otoroshi-instance",children:"Select Otoroshi instance"}),"\n",(0,o.jsx)(t.p,{children:"Just select a previously created Otoroshi instance to begin."}),"\n",(0,o.jsx)(t.h2,{id:"select-the-step",children:"Select the step"}),"\n",(0,o.jsx)(t.p,{children:"You can begin to import Otoroshi service groups or just Otoroshi apikeys"}),"\n",(0,o.jsx)(t.h2,{id:"select-service-group-to-import",children:"Select Service group to import"}),"\n",(0,o.jsxs)(t.p,{children:["You have to choose which services you want to import. It's completly possible to change the API name but no necessary.\nYou have to choose a team to admin the crated API. If the team doesn't exist, you can create a team in this screen.\nYour action is just, for the moment, to tack the api to create, the creation will be effective later.",(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.em,{children:"notice: Every choice you make are saved on your local storage in case of problem."})]}),"\n",(0,o.jsx)(t.h2,{id:"services---recap-and-creation",children:"Services - Recap and creation"}),"\n",(0,o.jsxs)(t.p,{children:["The next screen list all API to create. If your agree with this, you can click on the ",(0,o.jsx)(t.code,{children:"create"})," button to launch the APIs creation."]}),"\n",(0,o.jsx)(t.h2,{id:"select-api-keys-to-import",children:"Select API keys to import"}),"\n",(0,o.jsxs)(t.p,{children:["You have to choose which API keys you want to import.\nYou have to choose an API with a plan and a team for every API keys. If the plan does't exists, you can create a plan in this screen (",(0,o.jsx)(t.em,{children:"notice: it will a FreePlan but you can change it after creation"}),").",(0,o.jsx)(t.br,{}),"\n","If the team doesn't exist, you can create a team in this screen.\nYour action is just, for the moment, to stack the API key to create, the creation will be effective later.",(0,o.jsx)(t.br,{}),"\n",(0,o.jsx)(t.em,{children:"notice: Every choice you make are saved on your local storage in case of problem."})]}),"\n",(0,o.jsx)(t.h2,{id:"subscriptions---recap-and-creation",children:"Subscriptions - Recap and creation"}),"\n",(0,o.jsx)(t.p,{children:"The next screen list all subscriptions to create. If your agree with this, you can click on the create button to launch the subscriptios creation."}),"\n",(0,o.jsx)(t.h2,{id:"done",children:"Done"}),"\n",(0,o.jsx)(t.p,{children:"All the selected APIs and API keys are created. You have certainly to go to API page to update some informations because APIs are just created with default informations, just name and plan.\nIf you have created some teams, be aware that you are the only member of those teams.\nYou can import APIS and API keys from another Otorshi instance if you wish."})]})}function u(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var o=n(7294);const s={},i=o.createContext(s);function a(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);