"use strict";(self.webpackChunkdaikoku_documentation=self.webpackChunkdaikoku_documentation||[]).push([[5033],{20165:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"usages/tenantusage/5.5-display","title":"Display modes","description":"Two display modes are available in Daikoku","source":"@site/docs/02-usages/08-tenantusage/5.5-display.md","sourceDirName":"02-usages/08-tenantusage","slug":"/usages/tenantusage/5.5-display","permalink":"/daikoku/docs/usages/tenantusage/5.5-display","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Initialize Tenant from Otoroshi instances","permalink":"/daikoku/docs/usages/tenantusage/1.5-initialize"},"next":{"title":"Using Daikoku as an API producer","permalink":"/daikoku/docs/usages/producerusage/"}}');var s=t(74848),o=t(28453);const a={},r="Display modes",d={},l=[{value:"Default mode",id:"default-mode",level:2},{value:"Environment mode",id:"environment-mode",level:2}];function u(e){const n={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"display-modes",children:"Display modes"})}),"\n",(0,s.jsx)(n.p,{children:"Two display modes are available in Daikoku"}),"\n",(0,s.jsx)(n.h2,{id:"default-mode",children:"Default mode"}),"\n",(0,s.jsx)(n.p,{children:"This is the basic mode of Daikoku, business oriented. The exposed API is only linked to one service and the associated usage plans have only a commercial interest."}),"\n",(0,s.jsx)(n.p,{children:"The API carries its documentation, its test configuration or even its OpenAPI definition. The client side of Daikoku offers sections in the API page to display them."}),"\n",(0,s.jsx)(n.h2,{id:"environment-mode",children:"Environment mode"}),"\n",(0,s.jsx)(n.p,{children:"The environment mode introduces an approach focused in work environments.\nIt allows users to manage their consumption plans as working environments, better suited for internal corporate use.\nFind out how this feature transforms consumption plan management."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The usage plans are now working environment"}),"\n",(0,s.jsx)(n.li,{children:"The environments contain the tech documentation, the OpenAPI definition and the test config"}),"\n",(0,s.jsx)(n.li,{children:"The number environment for an API is limited to the existing environment of the tenant"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To create a new environment, just add a new one in the list below the mode selector"})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);