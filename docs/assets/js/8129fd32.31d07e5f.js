"use strict";(self.webpackChunkdaikoku_documentation=self.webpackChunkdaikoku_documentation||[]).push([[9276],{16860:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>a,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"getstarted/firstrun/configfile","title":"Config. with files","description":"There are a lot of things you may configure in Daikoku. By default, Daikoku provides a configuration that should be enough for testing purpose. But you\'ll likely need to update this configuration when you\'ll need to move Daikoku into production.","source":"@site/docs/01-getstarted/05-firstrun/configfile.md","sourceDirName":"01-getstarted/05-firstrun","slug":"/getstarted/firstrun/configfile","permalink":"/daikoku/docs/getstarted/firstrun/configfile","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"First run","permalink":"/daikoku/docs/getstarted/firstrun/"},"next":{"title":"Choose your audit trail datastore","permalink":"/daikoku/docs/getstarted/firstrun/datastore"}}');var s=n(74848),r=n(28453);const d={},o="Config. with files",l={},c=[{value:"Common configuration",id:"common-configuration",level:2},{value:"Admin api",id:"admin-api",level:2},{value:"Otoroshi settings",id:"otoroshi-settings",level:2},{value:"Daikoku init",id:"daikoku-init",level:2},{value:"DB configuration",id:"db-configuration",level:2},{value:"Play specific configuration",id:"play-specific-configuration",level:2},{value:"Anonymous reporting",id:"anonymous-reporting",level:2},{value:"More config. options",id:"more-config-options",level:2},{value:"Example of configuration file",id:"example-of-configuration-file",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"config-with-files",children:"Config. with files"})}),"\n",(0,s.jsx)(t.p,{children:"There are a lot of things you may configure in Daikoku. By default, Daikoku provides a configuration that should be enough for testing purpose. But you'll likely need to update this configuration when you'll need to move Daikoku into production."}),"\n",(0,s.jsxs)(t.p,{children:["In this page, any configuration property can be set at runtime using a ",(0,s.jsx)(t.code,{children:"-D"})," flag when launching Daikoku, like:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"java -Dhttp.port=8080 -jar daikoku.jar\n"})}),"\n",(0,s.jsx)(t.p,{children:"or"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-sh",children:"./bin/daikoku -Dhttp.port=8080\n"})}),"\n",(0,s.jsx)(t.h2,{id:"common-configuration",children:"Common configuration"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.mode"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"prod"'}),(0,s.jsxs)(t.td,{children:["Daikoku running mode. Supported values are ",(0,s.jsx)(t.code,{children:"dev"})," or ",(0,s.jsx)(t.code,{children:"prod"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.exposedOn"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:"http.port"}),(0,s.jsx)(t.td,{children:"The HTTP port exposed by Daikoku"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.singingkey"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"secret"'}),(0,s.jsx)(t.td,{children:"The secret used for signing the JWT token"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.tenants.provider"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"local"'}),(0,s.jsxs)(t.td,{children:["The way to get the tenant to display. Supported values are ",(0,s.jsx)(t.code,{children:"local"}),", ",(0,s.jsx)(t.code,{children:"header"})," or ",(0,s.jsx)(t.code,{children:"hostname"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.tenants.hostheaderName"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:"Otoroshi-Proxied-Host"}),(0,s.jsxs)(t.td,{children:["The header key to get the host, in the case of daikoku.tenants.provider is ",(0,s.jsx)(t.code,{children:"hostname"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.team.defaultApiKeyVisibility"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"User"'}),(0,s.jsxs)(t.td,{children:["The default value of team apikeys visibility for its own members is based on Team permission. Supported values are ",(0,s.jsx)(t.code,{children:"Administrator"}),", ",(0,s.jsx)(t.code,{children:"ApiEditor"})," or ",(0,s.jsx)(t.code,{children:"User"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.exposition.provider"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"none"'}),(0,s.jsxs)(t.td,{children:["Activate the exchange protocol. Supported values are ",(0,s.jsx)(t.code,{children:"otoroshi"})," (for ",(0,s.jsx)(t.a,{href:"https://maif.github.io/otoroshi/manual/usage/2-services.html#otoroshi-exchange-protocol",children:"Otoroshi Exchange Protocol"})," and ",(0,s.jsx)(t.code,{children:"none"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.snowflake.seed"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"number"}),(0,s.jsx)(t.td,{children:"0"}),(0,s.jsx)(t.td,{children:"This number will be used to generate unique IDs across the cluster. Each Otoroshi instance must have a unique seed."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"admin-api",children:"Admin api"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.api.type"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"local"'}),(0,s.jsxs)(t.td,{children:["The provider of apikey for admin APIs. Supported values are ",(0,s.jsx)(t.code,{children:"local"})," and ",(0,s.jsx)(t.code,{children:"otoroshi"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.api.key"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"secret"'}),(0,s.jsx)(t.td,{children:"The local apikey of admin APIs"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.api.headerName"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"Otoroshi-Claim"'}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.api.headerSecret"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"secret"'}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"otoroshi-settings",children:"Otoroshi settings"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.exposition.otoroshi.stateHeaderName"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"Otoroshi-State"'}),(0,s.jsx)(t.td,{children:"The Otoroshi exchange protocol header name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.exposition.otoroshi.stateRespHeaderName"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"Otoroshi-State-resp"'}),(0,s.jsx)(t.td,{children:"The Otoroshi exchange protocol response header name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.otoroshi.groups.namePrefix"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Value to filter Otoroshi groups based on the group name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.otoroshi.groups.idPrefix"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Value to filter Otoroshi groups based on the group d"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.otoroshi.sync.master"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"boolean"}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"Value to define if the instance is the master to sync Otoroshi datas"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.otoroshi.sync.key"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"secret"'}),(0,s.jsx)(t.td,{children:"Sync key to sync Otoroshi"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.otoroshi.sync.cron"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"boolean"}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"Value to define if Otoroshi values are sync by cron"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.otoroshi.sync.instance"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"number"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Daikoku instance number"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"daikoku-init",children:"Daikoku init"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.init.host"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"localhost"'}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.init.admin.name"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{children:'"Daikoku admin"'}),(0,s.jsx)(t.td,{children:"Daikoku default admin name"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.init.admin.email"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsxs)(t.td,{children:['"',(0,s.jsx)(t.a,{href:"mailto:admin@daikoku.io",children:"admin@daikoku.io"}),'"']}),(0,s.jsx)(t.td,{children:"Daikoku default admin email"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.init.admin.password"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"String"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"Daikoku default admin password"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.init.data.from"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"A file path or a URL to a Daikoku export file. If the datastore is empty on startup, this file will be used to import data to the empty DB"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"db-configuration",children:"DB configuration"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Postgres configuration"}),"\n"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.postgres.port"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"int"}),(0,s.jsx)(t.td,{children:"5432"}),(0,s.jsx)(t.td,{children:"The port used to connect to datastore"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.postgres.host"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"localhost"'}),(0,s.jsx)(t.td,{children:"The host wher the datastore is"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.postgres.database"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"default"'}),(0,s.jsx)(t.td,{children:"The name of the database"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.postgres.username"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"postgres"'}),(0,s.jsx)(t.td,{children:"The user used to connect to database"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.postgres.password"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"postgres"'}),(0,s.jsx)(t.td,{children:"The password used to connect to database"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.postgres.schema"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"public"'}),(0,s.jsx)(t.td,{children:"The current schema"})]})]})]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsx)(t.p,{children:"Audit trail purge configuration"}),"\n"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.audit.purge.cron"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"boolean"}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"Enable the automatic purge of audit trail in database"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.audit.purge.interval"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"1hour"'}),(0,s.jsx)(t.td,{children:"The interval of purge run"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.audit.purge.max.date"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"60days"'}),(0,s.jsx)(t.td,{children:"Retention date for the audit trail"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"play-specific-configuration",children:"Play specific configuration"}),"\n",(0,s.jsxs)(t.p,{children:["As Daikoku is a ",(0,s.jsx)(t.a,{href:"https://www.playframework.com/",children:"Play app"}),", you should take a look at the ",(0,s.jsx)(t.a,{href:"https://www.playframework.com/documentation/2.6.x/Configuration",children:"Play configuration documentation"})," to tune its internal configuration"]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"http.port"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"number"}),(0,s.jsx)(t.td,{children:"8080"}),(0,s.jsx)(t.td,{children:"The HTTP port used by Daikoku. You can use 'disabled' as value if you don't want to use HTTP"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"https.port"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"number"}),(0,s.jsx)(t.td,{children:"disabled"}),(0,s.jsx)(t.td,{children:"The HTTPS port used by Daikoku. You can use 'disabled' as value if you don't want to use HTTPS"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"play.http.secret.key"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"secret"'}),(0,s.jsx)(t.td,{children:"The secret used to sign Daikoku session cookie"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"play.http.session.secure"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"boolean"}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"Whether or not the Daikoku backoffice session will be served over HTTPS only"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"play.http.session.httpOnly"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"boolean"}),(0,s.jsx)(t.td,{children:"true"}),(0,s.jsx)(t.td,{children:"Whether or not the Daikoku backoffice session will be accessible from JavaScript"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"play.http.session.maxAge"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"number"}),(0,s.jsx)(t.td,{children:"259200000"}),(0,s.jsx)(t.td,{children:"The number of seconds before Daikoku backoffice session expired"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"play.http.session.domain"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:"null"}),(0,s.jsx)(t.td,{children:"The domain on which the Daikoku backoffice session is authorized"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"play.http.session.cookieName"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"daikoku-session"'}),(0,s.jsx)(t.td,{children:"Tme of the Daikoku backoffice session"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"server.https.keyStore.path"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"The path to the keystore containing the private key and certificate, if not provided generates a keystore for you"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"server.https.keyStore.type"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'"JKS"'}),(0,s.jsx)(t.td,{children:"The keystore type"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"server.https.keyStore.password"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{children:'""'}),(0,s.jsx)(t.td,{children:"The password"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"server.https.keyStore.algorithm"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"string"}),(0,s.jsx)(t.td,{}),(0,s.jsx)(t.td,{children:"The keystore algorithm, defaults to the platforms default algorithm"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"anonymous-reporting",children:"Anonymous reporting"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"name"}),(0,s.jsx)(t.th,{style:{textAlign:"center"},children:"type"}),(0,s.jsx)(t.th,{children:"default value"}),(0,s.jsx)(t.th,{children:"description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.anonymous-reporting.enabled"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"boolean"}),(0,s.jsx)(t.td,{children:"true"}),(0,s.jsx)(t.td,{children:"Enabling or not the anonymous reporting. If it's set to true and in the frontend to false, no reporting will be sent."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.anonymous-reporting.timeout"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"number"}),(0,s.jsx)(t.td,{children:"60000"}),(0,s.jsx)(t.td,{children:"The request timeout for sending data to our anonymous reporting database."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"daikoku.containerized"})}),(0,s.jsx)(t.td,{style:{textAlign:"center"},children:"boolean"}),(0,s.jsx)(t.td,{children:"false"}),(0,s.jsx)(t.td,{children:"This is to know if you are running daikoku with docker or not (only used for the anonymous reporting)"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"more-config-options",children:"More config. options"}),"\n",(0,s.jsxs)(t.p,{children:["See ",(0,s.jsx)(t.a,{href:"https://github.com/MAIF/daikoku/blob/master/daikoku/conf/application.conf",children:"https://github.com/MAIF/daikoku/blob/master/daikoku/conf/application.conf"})]}),"\n",(0,s.jsxs)(t.p,{children:["If you want to configure HTTPS on your Daikoku server, just read the ",(0,s.jsx)(t.a,{href:"https://www.playframework.com/documentation/2.6.x/ConfiguringHttps",children:"PlayFramework documentation about it"})]}),"\n",(0,s.jsx)(t.h2,{id:"example-of-configuration-file",children:"Example of configuration file"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-conf",children:'daikoku {\n\n  mode = "prod"\n  signingKey = "secret"\n\n  exposedOn = ${http.port}\n\n  api {\n    type = "local"\n    key = "secret"\n    headerName = "Otoroshi-Claim"\n    headerSecret = "secret"\n  }\n\n  init {\n    host = "localhost"\n    admin {\n      name = "Daikoku admin"\n      email = "admin@daikoku.io"\n      password = "password"\n    }\n    data {\n      from = "/config/daikoku.ndjson"\n      headers = {}\n    }\n  }\n\n  snowflake {\n    seed = 0\n  }\n\n  tenants {\n    provider = "local"\n  }\n\n  exposition {\n    provider = "none"\n    otoroshi {\n      stateHeaderName = "Otoroshi-State"\n      stateRespHeaderName = "Otoroshi-State-Resp"\n    }\n  }\n\n  otoroshi {\n    groups {\n      namePrefix = "daikoku"\n    }\n    sync {\n      interval = 3600000\n      master = false\n      key = "secret"\n      cron = true\n      instance = 0\n    }\n  }\n\n  stats {\n    sync {\n      interval = 3600000\n      cron = true\n    }\n    call {\n      interval = 600000\n    }\n  }\n\n  audit {\n    purge {\n      cron = false\n      interval = 1hour\n      max.date = 60days\n    }\n  }\n\n  containerized = false\n  containerized = ${?IS_CONTAINERIZED}\n\n  anonymous-reporting {\n    enabled = true\n    enabled = ${?DAIKOKU_ANONYMOUS_REPORTING_ENABLED}\n    url = "https://reporting.otoroshi.io/daikoku/ingest"\n    timeout = 60000\n    timeout = ${?DAIKOKU_ANONYMOUS_REPORTING_TIMEOUT}\n  }\n}\n\npostgres {\n  database = "daikoku_test"\n  poolSize = 4\n}\n\n\nhttp.port = 8080\nhttps.port = disabled\n\nplay {\n  application.loader = "fr.maif.otoroshi.daikoku.DaikokuLoader"\n  modules {}\n  filters {\n    enabled = []\n  }\n  http {\n    filters = play.api.http.NoHttpFilters\n    secret {\n      key = "secret"\n    }\n    session = {\n      cookieName = "daikoku-session"\n      secure = false\n      maxAge = 259200000\n      httpOnly = true\n      sameSite = "lax"\n      domain = null\n      path = ${play.http.context}\n      jwt {\n        signatureAlgorithm = "HS256"\n        expiresAfter = ${play.http.session.maxAge}\n        clockSkew = 5 minutes\n        dataClaim = "data"\n      }\n    }\n  }\n  server {\n    akka {\n      requestTimeout = 60s\n    }\n    http {\n      port = ${http.port}\n      idleTimeout = 60s\n    }\n  }\n}\n\n'})})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var i=n(96540);const s={},r=i.createContext(s);function d(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);